(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{353:function(e,v,a){"use strict";a.r(v);var _=a(30),t=Object(_.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"_7-hierarchical-modeling-mesh"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-hierarchical-modeling-mesh"}},[e._v("#")]),e._v(" 7 - Hierarchical Modeling, Mesh")]),e._v(" "),v("h2",{attrs:{id:"next-class-announcement"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#next-class-announcement"}},[e._v("#")]),e._v(" Next Class Announcement")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("Hanyang University 학생들의 예비군 훈련 일정(4월 28~30)에 따라")])]),e._v(" "),v("li",[v("p",[e._v("이 수업과 시간은 겹치지 않지만, 수강생 간의 공정성을 위해")])]),e._v(" "),v("li",[v("p",[e._v("다음 주 강의 및 실습은 "),v("strong",[e._v("녹화 영상으로 제공")]),e._v("됨 (LMS 업로드 예정)")]),e._v(" "),v("ul",[v("li",[e._v("강의 및 실습에 질문 있으면 LMS Q&A 게시판 이용")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("TA의 실습 세션도 없음")])]),e._v(" "),v("ul",[v("li",[e._v("과제 관련 질문도 LMS Q&A 게시판을 통해 문의")])])])]),e._v(" "),v("h2",{attrs:{id:"updated-midterm-exam-announcement"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#updated-midterm-exam-announcement"}},[e._v("#")]),e._v(" (Updated) Midterm Exam Announcement")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("일시: 5월 7일 (수) 오후 6:30 ~ 7:30")])]),e._v(" "),v("li",[v("p",[e._v("장소: 추후 공지")])]),e._v(" "),v("li",[v("p",[e._v("범위: Lecture 2~7, Lab 2~7")])]),e._v(" "),v("li",[v("p",[e._v("시험 시작 후 30분 이내 퇴실 불가")])]),e._v(" "),v("li",[v("p",[e._v("시험 시작 후 30분이 지나면 입실도 불가 ("),v("strong",[e._v("절대 지각 금지")]),e._v(")")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("학생증 필수 지참")])])])]),e._v(" "),v("h2",{attrs:{id:"outline"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#outline"}},[e._v("#")]),e._v(" Outline")]),e._v(" "),v("ul",[v("li",[v("p",[v("strong",[e._v("Hierarchical Modeling")])]),e._v(" "),v("ul",[v("li",[e._v("계층적 모델링 개념\n"),v("ul",[v("li",[e._v("예: 사람 모형")])])]),e._v(" "),v("li",[e._v("계층 모델 렌더링")]),e._v(" "),v("li",[e._v("일련의 변환 해석")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("Mesh")])]),e._v(" "),v("ul",[v("li",[e._v("개별 삼각형")]),e._v(" "),v("li",[e._v("인덱스 삼각형 집합")])])])]),e._v(" "),v("h1",{attrs:{id:"hierarchical-modeling"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hierarchical-modeling"}},[e._v("#")]),e._v(" Hierarchical Modeling")]),e._v(" "),v("h2",{attrs:{id:"hierarchical-modeling-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hierarchical-modeling-2"}},[e._v("#")]),e._v(" Hierarchical Modeling")]),e._v(" "),v("ul",[v("li",[e._v("하위 구성 요소(자식)를 상위 구성 요소(부모)에 "),v("strong",[e._v("중첩")]),e._v("하여 트리 구조로 표현")]),e._v(" "),v("li",[e._v("각 파트는 고유한 "),v("strong",[e._v("body frame")]),e._v("을 가짐")]),e._v(" "),v("li",[e._v("각 파트의 움직임은 부모의 body frame 기준으로 기술됨")])]),e._v(" "),v("h2",{attrs:{id:"example-human-figure"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#example-human-figure"}},[e._v("#")]),e._v(" Example - Human Figure")]),e._v(" "),v("ul",[v("li",[e._v("각 파트는 다음과 같은 트리 구조를 가짐:\n"),v("ul",[v("li",[e._v("Hips → Spine → Head / 팔 / 다리 → 손발")])])])]),e._v(" "),v("h2",{attrs:{id:"human-figure-frames"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#human-figure-frames"}},[e._v("#")]),e._v(" Human Figure - Frames")]),e._v(" "),v("ul",[v("li",[e._v("각 파트는 고유한 body frame을 가짐")])]),e._v(" "),v("h2",{attrs:{id:"human-figure-movement-of-rhip-rknee"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#human-figure-movement-of-rhip-rknee"}},[e._v("#")]),e._v(" Human Figure - Movement of rhip & rknee")]),e._v(" "),v("ul",[v("li",[e._v("각 파트의 움직임은 "),v("strong",[e._v("부모의 frame 기준으로 기술됨")]),e._v(" "),v("ul",[v("li",[e._v("각 파트는 **부모 frame 기준의 변환 행렬(transformation)**을 가짐")])])]),e._v(" "),v("li",[e._v('이는 하위 파트를 "묶어서(group)" 제어할 수 있게 해 줌')])]),e._v(" "),v("h2",{attrs:{id:"human-figure-movement-of-more-joints"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#human-figure-movement-of-more-joints"}},[e._v("#")]),e._v(" Human Figure - Movement of more joints")]),e._v(" "),v("ul",[v("li",[e._v("각 파트의 움직임은 "),v("strong",[e._v("부모의 frame 기준으로 기술됨")]),e._v(" "),v("ul",[v("li",[e._v("각 파트는 **부모 frame 기준의 변환 행렬(transformation)**을 가짐")])])]),e._v(" "),v("li",[e._v('이는 하위 파트를 "묶어서(group)" 제어할 수 있게 해 줌')])]),e._v(" "),v("h2",{attrs:{id:"hierarchical-model"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hierarchical-model"}},[e._v("#")]),e._v(" Hierarchical Model")]),e._v(" "),v("ul",[v("li",[e._v("계층적 모델은 일반적으로 **트리 구조(tree structure)**로 표현됨")]),e._v(" "),v("li",[e._v("전체 장면(scene)을 표현하는 그래프 구조 "),v("strong",[e._v("scene graph")]),e._v("도 예시")]),e._v(" "),v("li",[e._v("각 노드는 "),v("strong",[e._v("부모 노드의 frame 기준의 변환")]),e._v("을 가짐")])]),e._v(" "),v("h2",{attrs:{id:"rendering-hierarchical-models"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rendering-hierarchical-models"}},[e._v("#")]),e._v(" Rendering Hierarchical Models")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("계층 모델을 렌더링하려면,"),v("br"),e._v(" "),v("strong",[e._v("각 노드의 frame을 world frame 기준으로 변환")]),e._v("해야 함 → 각 정점의 global 위치 계산")])]),e._v(" "),v("li",[v("p",[e._v("복습:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("p^(0) = Mp^(1)")]),e._v(" "),v("ul",[v("li",[e._v("{1}에 서서 p를 봄 → p^(1)")]),e._v(" "),v("li",[e._v("{0}에 서서 p를 봄 → p^(0)")])])])])])]),e._v(" "),v("h2",{attrs:{id:"rendering-hierarchical-models-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rendering-hierarchical-models-2"}},[e._v("#")]),e._v(" Rendering Hierarchical Models")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("각 노드는 **부모 노드 기준의 변환(local transformation)**을 가짐"),v("br"),e._v("\n→ "),v("strong",[e._v("Local transformation")])])]),e._v(" "),v("li",[v("p",[e._v("예:")]),e._v(" "),v("ul",[v("li",[e._v("Hip 위치 및 자세: "),v("code",[e._v("M_hips")])]),e._v(" "),v("li",[e._v("LeftUpLeg 위치 및 자세: "),v("code",[e._v("M_leftupleg")]),e._v(" (hips 기준)")])])])]),e._v(" "),v("h2",{attrs:{id:"rendering-hierarchical-models-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rendering-hierarchical-models-3"}},[e._v("#")]),e._v(" Rendering Hierarchical Models")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("각 노드의 frame을 "),v("strong",[e._v("world frame 기준으로 표현")]),e._v("해야 렌더링 가능"),v("br"),e._v("\n→ "),v("strong",[e._v("Global transformation")])])]),e._v(" "),v("li",[v("p",[e._v("질문:")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("다른 노드의 local 변환을 이용해서")]),e._v(" 어떻게 global 변환을 계산할 수 있을까?")])])])]),e._v(" "),v("h2",{attrs:{id:"recall-post-right-multiplication"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#recall-post-right-multiplication"}},[e._v("#")]),e._v(" Recall: Post-(right) Multiplication")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("p' = M₁M₂p")]),e._v(" (M₂에 post-multiply)"),v("br"),e._v("\n→ L-to-R")])]),e._v(" "),v("ol",[v("li",[v("code",[e._v("M₁")]),e._v(": body frame {0} → {1} 변환")]),e._v(" "),v("li",[v("code",[e._v("M₂")]),e._v(": body frame {1} → {2} 변환")]),e._v(" "),v("li",[v("code",[e._v("p")]),e._v(": {2}의 점 → {0} 기준으로 위치 계산")])]),e._v(" "),v("p",[e._v("예:")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("p' = TRp\n")])])]),v("h2",{attrs:{id:"interpretation-of-a-series-of-transformations"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#interpretation-of-a-series-of-transformations"}},[e._v("#")]),e._v(" Interpretation of a Series of Transformations")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("p₀ = I p₀")]),e._v(" (처음 상태는 단위행렬 기준)")])]),e._v(" "),v("li",[v("p",[e._v("{0}에 서서 원을 관측하며"),v("br"),e._v("\n{0} → {1} → {2} → ... → {4} 순으로 body frame이 변함")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("p₁ = M₁ p₀")])]),e._v(" "),v("ul",[v("li",[e._v("현재 body frame: {1}, 기준: {0}")]),e._v(" "),v("li",[e._v("{1}에서 관찰 시 → "),v("code",[e._v("p₀")])]),e._v(" "),v("li",[e._v("{0}에서 관찰 시 → "),v("code",[e._v("p₁")])])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("p₂ = M₁ M₂ p₀")])]),e._v(" "),v("ul",[v("li",[e._v("현재 body frame: {2}, 기준: {0}")]),e._v(" "),v("li",[e._v("{2}에서 관찰 시 → "),v("code",[e._v("p₀")])]),e._v(" "),v("li",[e._v("{0}에서 관찰 시 → "),v("code",[e._v("p₂")])])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("p₃ = M₁ M₂ M₃ p₀")])]),e._v(" "),v("ul",[v("li",[e._v("현재 body frame: {3}, 기준: {0}")]),e._v(" "),v("li",[e._v("{3}에서 관찰 시 → "),v("code",[e._v("p₀")])]),e._v(" "),v("li",[e._v("{0}에서 관찰 시 → "),v("code",[e._v("p₃")])])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("p₄ = M₁ M₂ M₃ M₄ p₀")])]),e._v(" "),v("ul",[v("li",[e._v("현재 body frame: {4}, 기준: {0}")]),e._v(" "),v("li",[e._v("{4}에서 관찰 시 → "),v("code",[e._v("p₀")])]),e._v(" "),v("li",[e._v("{0}에서 관찰 시 → "),v("code",[e._v("p₄")])])])]),e._v(" "),v("li",[v("p",[e._v("반복 구조 재설명")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("p₄ = M₁ M₂ M₃ M₄ p₀")])]),e._v(" "),v("li",[e._v("{4}에서 "),v("code",[e._v("p₀")]),e._v("를 보는 관찰 → "),v("code",[e._v("p₄")])]),e._v(" "),v("li",[e._v("{0}에서 "),v("code",[e._v("p₄")]),e._v(" 관찰")])])]),e._v(" "),v("li",[v("p",[e._v("동일 내용 시각화:")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("M₁")]),e._v(", "),v("code",[e._v("M₂")]),e._v(", "),v("code",[e._v("M₃")]),e._v(", "),v("code",[e._v("M₄")]),e._v(" 순서로 적용")]),e._v(" "),v("li",[e._v("각 변환은 이전 노드의 body frame 기준으로 적용됨")]),e._v(" "),v("li",[e._v("마지막으로 "),v("code",[e._v("p₀")]),e._v("를 변환하여 "),v("code",[e._v("p₄")]),e._v(" 획득")])])])]),e._v(" "),v("h2",{attrs:{id:"computing-global-transform-from-series-of-local-transforms"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#computing-global-transform-from-series-of-local-transforms"}},[e._v("#")]),e._v(" Computing Global Transform from Series of Local Transforms")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("p₄ = M₁ M₂ M₃ M₄ p₀")])]),e._v(" "),v("ul",[v("li",[e._v("node 4의 "),v("strong",[e._v("global transformation")]),e._v(": "),v("code",[e._v("M₁ M₂ M₃ M₄")])])])]),e._v(" "),v("li",[v("p",[e._v("각 "),v("code",[e._v("Mᵢ")]),e._v(": i번째 노드의 "),v("strong",[e._v("local transformation")])])]),e._v(" "),v("li",[v("p",[e._v("적용 순서:")]),e._v(" "),v("ul",[v("li",[e._v("node 1의 body frame 기준 → node 2 → node 3 → node 4")])])])]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Node i")]),e._v(" "),v("th",[e._v("Global Transform Gᵢ = ...")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("Hips")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ")])]),e._v(" "),v("tr",[v("td",[e._v("Spine")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ")])]),e._v(" "),v("tr",[v("td",[e._v("Head")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ Mₕₑₐ𝑑")])]),e._v(" "),v("tr",[v("td",[e._v("RightArm")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ Mᵣᵢ𝗀ₕₜᴬʳᵐ")])]),e._v(" "),v("tr",[v("td",[e._v("RightForeArm")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ Mᵣᵢ𝗀ₕₜᴬʳᵐ Mᵣᶠₐ")])]),e._v(" "),v("tr",[v("td",[e._v("RightHand")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ Mᵣᵢ𝗀ₕₜᴬʳᵐ Mᵣᶠₐ Mᵣₕₐ")])]),e._v(" "),v("tr",[v("td",[e._v("LeftArm")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ Mₗₑ𝒻ₜᴬʳᵐ")])])])]),e._v(" "),v("ul",[v("li",[e._v("트리 구조 기반으로 각 노드의 global 변환 계산 가능")])]),e._v(" "),v("h2",{attrs:{id:"rendering-hierarchical-models-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rendering-hierarchical-models-4"}},[e._v("#")]),e._v(" Rendering Hierarchical Models")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("i")]),e._v("번째 노드가 단위 큐브로 렌더링된다고 가정할 때,\n"),v("ul",[v("li",[e._v("단위 큐브의 정점 "),v("code",[e._v("p₀")]),e._v("는 world frame에서 "),v("code",[e._v("pᵢ = Gᵢ * p₀")]),e._v("로 표현됨")])])])]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Node i")]),e._v(" "),v("th",[e._v("Global Transform Gᵢ = ...")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("Hips")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ")])]),e._v(" "),v("tr",[v("td",[e._v("Spine")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ")])]),e._v(" "),v("tr",[v("td",[e._v("Head")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₛₚᵢₙₑ Mₕₑₐ𝑑")])]),e._v(" "),v("tr",[v("td",[e._v("RightArm")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mᵣᵢ𝗀ₕₜᴬʳₘ")])]),e._v(" "),v("tr",[v("td",[e._v("RightForeArm")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mᵣᵢ𝗀ₕₜᴬʳₘ Mᵣᶠₐ Mᵣ𝗁")])]),e._v(" "),v("tr",[v("td",[e._v("LeftArm")]),e._v(" "),v("td",[e._v("Mₕᵢₚₛ Mₗₑ𝑓ₜᴬʳₘ")])]),e._v(" "),v("tr",[v("td",[e._v("...")]),e._v(" "),v("td")])])]),e._v(" "),v("h2",{attrs:{id:"rendering-hierarchical-models-shape-transformation"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rendering-hierarchical-models-shape-transformation"}},[e._v("#")]),e._v(" Rendering Hierarchical Models - Shape Transformation")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("만약 i번째 노드가 단위 큐브가 아니라 특정 shape "),v("code",[e._v("Sᵢⱼ")]),e._v("로 렌더링된다면,")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("pᵢⱼ = Gᵢ * Sᵢ * p₀")])])])]),e._v(" "),v("li",[v("p",[e._v("특정 노드 i의 j번째 shape에 대해 shape 변환 "),v("code",[e._v("Sᵢⱼ")]),e._v("를 사용할 수 있음")])])]),e._v(" "),v("h2",{attrs:{id:"rendering-hierarchical-models-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rendering-hierarchical-models-5"}},[e._v("#")]),e._v(" Rendering Hierarchical Models")]),e._v(" "),v("ul",[v("li",[e._v("i번째 노드마다 global transform Gᵢ를 저장하여 렌더링 시 재사용 가능")])]),e._v(" "),v("h2",{attrs:{id:"quiz-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#quiz-1"}},[e._v("#")]),e._v(" Quiz 1")]),e._v(" "),v("h1",{attrs:{id:"mesh"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mesh"}},[e._v("#")]),e._v(" Mesh")]),e._v(" "),v("h2",{attrs:{id:"many-ways-to-digitally-encode-geometry"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#many-ways-to-digitally-encode-geometry"}},[e._v("#")]),e._v(" Many ways to digitally encode geometry")]),e._v(" "),v("ul",[v("li",[v("p",[v("strong",[e._v("EXPLICIT")])]),e._v(" "),v("ul",[v("li",[e._v("point cloud")]),e._v(" "),v("li",[e._v("polygon mesh")]),e._v(" "),v("li",[e._v("subdivision, NURBS")]),e._v(" "),v("li",[e._v("L-systems")]),e._v(" "),v("li",[e._v("...")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("IMPLICIT")])]),e._v(" "),v("ul",[v("li",[e._v("level set")]),e._v(" "),v("li",[e._v("algebraic surface")]),e._v(" "),v("li",[e._v("...")])])]),e._v(" "),v("li",[v("p",[e._v("각 표현 방식은 과제/기하 유형에 따라 적합한 선택지가 다름")])])]),e._v(" "),v("h2",{attrs:{id:"the-most-popular-representation-polygon-mesh"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#the-most-popular-representation-polygon-mesh"}},[e._v("#")]),e._v(" The Most Popular Representation: Polygon Mesh")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("단순한 표현으로 복잡한 3D 형상을 모델링 가능하며 렌더링 속도도 빠름")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("Polygon")]),e._v(": 직선으로 둘러싸인 “닫힌” 도형")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("Polygon mesh")]),e._v(": 여러 polygon이 이어져서 형상을 구성하는 구조")]),e._v(" "),v("ul",[v("li",[e._v("주로 "),v("strong",[e._v("triangle")]),e._v(" 또는 "),v("strong",[e._v("quad")]),e._v(" 사용")])])])]),e._v(" "),v("h2",{attrs:{id:"triangle-mesh"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#triangle-mesh"}},[e._v("#")]),e._v(" Triangle Mesh")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("일반적인 N각형은")]),e._v(" "),v("ul",[v("li",[e._v("평면이 아닐 수도 있고")]),e._v(" "),v("li",[e._v("오목할 수 있으며")]),e._v(" "),v("li",[e._v("렌더링에 적합하지 않음")])])]),e._v(" "),v("li",[v("p",[e._v("반면 triangle은 항상 평면이며 convex 형태")]),e._v(" "),v("ul",[v("li",[e._v("따라서 GPU는 모든 물체를 triangle로 분해하여 처리")])])]),e._v(" "),v("li",[v("p",[e._v("N각형도 triangle로 나눌 수 있음")])]),e._v(" "),v("li",[v("p",[e._v("결론: Triangle mesh 중심으로 학습")])])]),e._v(" "),v("h2",{attrs:{id:"representation-for-triangle-mesh"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#representation-for-triangle-mesh"}},[e._v("#")]),e._v(" Representation for Triangle Mesh")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("이 주제는 메모리에 정점을 저장하는 방식에 대한 것이다")]),e._v(" "),v("ul",[v("li",[e._v("정점의 위치")]),e._v(" "),v("li",[e._v("정점 간 관계(삼각형 구성)")])])]),e._v(" "),v("li",[v("p",[e._v("기본적인 두 가지 표현 방식:")]),e._v(" "),v("ul",[v("li",[e._v("Separate triangles")]),e._v(" "),v("li",[e._v("Indexed triangle set")])])])]),e._v(" "),v("h2",{attrs:{id:"vertex-winding-order"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vertex-winding-order"}},[e._v("#")]),e._v(" Vertex Winding Order")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("Vertex winding order는 다각형의 정점들이 나열되는 순서임")])]),e._v(" "),v("li",[v("p",[e._v('이 순서로 다각형의 "앞면"을 결정함')]),e._v(" "),v("ul",[v("li",[e._v("OpenGL: 반시계 방향(CCW)이 앞면")]),e._v(" "),v("li",[e._v("Direct3D: 시계 방향(CW)이 앞면")])])])]),e._v(" "),v("h2",{attrs:{id:"separate-triangles"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#separate-triangles"}},[e._v("#")]),e._v(" Separate triangles")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("counter-clockwise 순서로 정점 나열")])]),e._v(" "),v("li",[v("p",[e._v("예시:")]),e._v(" "),v("ul",[v("li",[e._v("vertex array:"),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("tri[0] → (x₀,y₀,z₀), (x₁,y₁,z₁), (x₂,y₂,z₂)\ntri[1] → (x₀,y₀,z₀), (x₂,y₂,z₂), (x₃,y₃,z₃)\n")])])])])])])]),e._v(" "),v("h2",{attrs:{id:"separate-triangles-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#separate-triangles-2"}},[e._v("#")]),e._v(" Separate Triangles")]),e._v(" "),v("ul",[v("li",[e._v("단점:\n"),v("ul",[v("li",[e._v("메모리 낭비")]),e._v(" "),v("li",[e._v("반올림 오차로 인한 틈 발생")]),e._v(" "),v("li",[e._v("인접 삼각형 탐색 어려움\n"),v("ul",[v("li",[e._v("t2의 이웃 삼각형을 찾기 위해, t2의 정점 중 거리 0인 정점을 전부 비교해야 함")])])])])])]),e._v(" "),v("h2",{attrs:{id:"example-a-cube-of-length-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#example-a-cube-of-length-2"}},[e._v("#")]),e._v(" Example: a cube of length 2")]),e._v(" "),v("ul",[v("li",[e._v("정점 인덱스 및 위치 예:")])]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("index")]),e._v(" "),v("th",[e._v("position")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("0")]),e._v(" "),v("td",[e._v("(-1, -1, 1)")])]),e._v(" "),v("tr",[v("td",[e._v("1")]),e._v(" "),v("td",[e._v("(1, -1, 1)")])]),e._v(" "),v("tr",[v("td",[e._v("2")]),e._v(" "),v("td",[e._v("(1, 1, 1)")])]),e._v(" "),v("tr",[v("td",[e._v("3")]),e._v(" "),v("td",[e._v("(-1, 1, 1)")])]),e._v(" "),v("tr",[v("td",[e._v("4")]),e._v(" "),v("td",[e._v("(-1, -1, -1)")])]),e._v(" "),v("tr",[v("td",[e._v("5")]),e._v(" "),v("td",[e._v("(1, -1, -1)")])]),e._v(" "),v("tr",[v("td",[e._v("6")]),e._v(" "),v("td",[e._v("(1, 1, -1)")])]),e._v(" "),v("tr",[v("td",[e._v("7")]),e._v(" "),v("td",[e._v("(-1, 1, -1)")])])])]),e._v(" "),v("h2",{attrs:{id:"example-cube-in-separate-triangles"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#example-cube-in-separate-triangles"}},[e._v("#")]),e._v(" Example Cube in Separate Triangles")]),e._v(" "),v("ul",[v("li",[e._v("Separate triangle 표현 방식에서는\n"),v("ul",[v("li",[e._v("정점 36개로 cube의 12개 삼각형 표현")]),e._v(" "),v("li",[e._v("vertex array에서 동일 정점이 여러 번 반복됨")])])])]),e._v(" "),v("h2",{attrs:{id:"indexed-triangle-set"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#indexed-triangle-set"}},[e._v("#")]),e._v(" Indexed triangle set")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("각 정점을 한 번만 저장")])]),e._v(" "),v("li",[v("p",[e._v("각 삼각형은 3개의 정점 인덱스를 가리킴")])]),e._v(" "),v("li",[v("p",[e._v("counter-clockwise 순서")])]),e._v(" "),v("li",[v("p",[e._v("예시:")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("vertex array:")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("vert[0] = (x₀, y₀, z₀)\nvert[1] = (x₁, y₁, z₁)\nvert[2] = (x₂, y₂, z₂)\n...\n")])])])]),e._v(" "),v("li",[v("p",[e._v("index array:")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("tInd[0] = (0, 2, 1)\ntInd[1] = (0, 3, 2)\n...\n")])])])])])])]),e._v(" "),v("h2",{attrs:{id:"indexed-triangle-set-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#indexed-triangle-set-2"}},[e._v("#")]),e._v(" Indexed Triangle Set")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("메모리 효율적: 각 정점 위치는 한 번만 저장됨")])]),e._v(" "),v("li",[v("p",[e._v("위상(topology)과 기하(geometry)를 분리하여 표현")]),e._v(" "),v("ul",[v("li",[e._v("Topology: 정점들이 어떻게 연결되어 삼각형을 구성하는지")]),e._v(" "),v("li",[e._v("Geometry: 정점들이 공간에 위치하는 실제 좌표")])])]),e._v(" "),v("li",[v("p",[e._v("인접 삼각형 탐색이 명확함")]),e._v(" "),v("ul",[v("li",[e._v("인접 삼각형은 동일한 정점 인덱스를 공유함")])])])]),e._v(" "),v("h2",{attrs:{id:"example-cube-in-indexed-triangle-set"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#example-cube-in-indexed-triangle-set"}},[e._v("#")]),e._v(" Example Cube in Indexed Triangle Set")]),e._v(" "),v("ul",[v("li",[e._v("Indexed triangle set 방식에서는\n"),v("ul",[v("li",[e._v("정점 8개와")]),e._v(" "),v("li",[e._v("삼각형 12개의 정점 인덱스로 cube를 표현함")])])])]),e._v(" "),v("h2",{attrs:{id:"quiz-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#quiz-2"}},[e._v("#")]),e._v(" Quiz 2")]),e._v(" "),v("h2",{attrs:{id:"creating-polygon-meshes"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#creating-polygon-meshes"}},[e._v("#")]),e._v(" Creating Polygon Meshes")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("일반적으로 polygon mesh는 3D 모델링 프로그램으로 생성됨")]),e._v(" "),v("ul",[v("li",[e._v("이 데이터가 저장된 파일을 object file 또는 model file이라 부름")])])]),e._v(" "),v("li",[v("p",[e._v("응용프로그램(예: 게임)은 이 object file에서 정점과 인덱스를 로드하여 객체를 그림")])])]),e._v(" "),v("h2",{attrs:{id:"_3d-model-file-formats"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3d-model-file-formats"}},[e._v("#")]),e._v(" 3D Model File Formats")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("DXF – AutoCAD")]),e._v(" "),v("ul",[v("li",[e._v("2D, 3D 바이너리 지원")])])]),e._v(" "),v("li",[v("p",[e._v("3DS – 3DS MAX")]),e._v(" "),v("ul",[v("li",[e._v("유연한 이진 형식")])])]),e._v(" "),v("li",[v("p",[e._v("VRML – Virtual reality modeling language")]),e._v(" "),v("ul",[v("li",[e._v("ASCII 기반, 사람이 읽고 쓸 수 있음")])])]),e._v(" "),v("li",[v("p",[e._v("OBJ – Wavefront OBJ format")]),e._v(" "),v("ul",[v("li",[e._v("ASCII 기반 (사람이 읽고 편집 가능)")]),e._v(" "),v("li",[e._v("매우 단순하고 널리 사용됨")])])]),e._v(" "),v("li",[v("p",[e._v("이 슬라이드에서는 OBJ 포맷을 자세히 살펴봄")])])]),e._v(" "),v("h2",{attrs:{id:"obj-file-format"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#obj-file-format"}},[e._v("#")]),e._v(" OBJ File Format")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("# 주석\n\n# 정점 위치 (x, y, z)\nv 0.123 0.234 0.345\nv 0.2 0.5 0.3\n...\n\n# 정점 노멀 (x, y, z)\nvn 0.707 0.000 0.707\n...\n\n# 텍스처 좌표 (u, v)\nvt 0.500 1\n...\n\n# 면 정의 (모든 인덱스는 1부터 시작)\n\n# 정점 인덱스만 있는 경우\nf 1 2 3\nf 2 3 4\n\n# 정점/텍스처/노멀 인덱스\nf 6/4/1 3/3/7 6/3/6\n\n# 정점/노멀 인덱스\nf 1//1 8//2 9//3\n\n# 정점/텍스처 인덱스\nf 3/1 4/2 5/3\n")])])]),v("ul",[v("li",[v("p",[e._v("기타 지원 기능:")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("선(Polyline)")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("l 1 5 8 2 4 9\n")])])])]),e._v(" "),v("li",[v("p",[e._v("재질(Materials)")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("mtllib [외부 .mtl 파일 이름]\nusemtl [재질 이름]\n")])])])])])]),e._v(" "),v("li",[v("p",[e._v("본 수업에서는 위 기능들은 사용하지 않음")])])]),e._v(" "),v("h2",{attrs:{id:"an-obj-example"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#an-obj-example"}},[e._v("#")]),e._v(" An OBJ Example")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("# A simple cube\nv 1.000000 -1.000000 -1.000000\nv 1.000000 -1.000000  1.000000\nv -1.000000 -1.000000  1.000000\nv -1.000000 -1.000000 -1.000000\nv 1.000000  1.000000 -0.999999\nv 0.999999  1.000000  1.000001\nv -1.000000  1.000000  1.000000\nv -1.000000  1.000000 -1.000000\n\nf 1 2 3 4\nf 5 8 7 6\nf 1 5 6 2\nf 2 6 7 3\nf 3 7 8 4\nf 5 1 4 8\n")])])]),v("h2",{attrs:{id:"obj-sources"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#obj-sources"}},[e._v("#")]),e._v(" OBJ Sources")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("https://free3d.com/")])]),e._v(" "),v("li",[v("p",[e._v("https://www.cgtrader.com/free-3d-models")])]),e._v(" "),v("li",[v("p",[e._v("위 사이트들에서 "),v("code",[e._v(".obj")]),e._v(" 모델 파일을 다운로드 받아 Blender에서 열 수 있음")])]),e._v(" "),v("li",[v("p",[e._v("OBJ 파일 형식은 매우 보편적임:")]),e._v(" "),v("ul",[v("li",[e._v("대부분의 모델링 프로그램이 OBJ 포맷으로 export 가능")]),e._v(" "),v("li",[e._v("대부분의 렌더링 패키지가 OBJ 포맷을 읽을 수 있음")])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);