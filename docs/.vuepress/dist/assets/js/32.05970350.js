(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{353:function(e,t,r){"use strict";r.r(t);var a=r(30),i=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_6-vertex-processing-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-vertex-processing-2"}},[e._v("#")]),e._v(" 6 - Vertex Processing 2")]),e._v(" "),t("h2",{attrs:{id:"outline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#outline"}},[e._v("#")]),e._v(" Outline")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Projection Transformation")]),e._v(" "),t("ul",[t("li",[e._v("Orthographic Projection")]),e._v(" "),t("li",[e._v("Perspective Projection")])])]),e._v(" "),t("li",[t("p",[e._v("Viewport Transformation")])])]),e._v(" "),t("h1",{attrs:{id:"projection-transformation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#projection-transformation"}},[e._v("#")]),e._v(" Projection Transformation")]),e._v(" "),t("h2",{attrs:{id:"projection-transformation-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#projection-transformation-2"}},[e._v("#")]),e._v(" Projection Transformation")]),e._v(" "),t("ul",[t("li",[e._v("View space → NDC (normalized device coordinate system)로 변환")]),e._v(" "),t("li",[e._v("수식:"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("p_c = P * p_v\n")])])]),e._v("여기서\n"),t("ul",[t("li",[t("code",[e._v("p_v")]),e._v(": view space 좌표")]),e._v(" "),t("li",[t("code",[e._v("P")]),e._v(": projection matrix")]),e._v(" "),t("li",[t("code",[e._v("p_c")]),e._v(": clip space (또는 NDC space) 좌표")])])])]),e._v(" "),t("h2",{attrs:{id:"recall-that"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recall-that"}},[e._v("#")]),e._v(" Recall that...")]),e._v(" "),t("ul",[t("li",[t("ol",[t("li",[e._v("객체 배치"),t("br"),e._v("\n→ Modeling transformation")])])]),e._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[e._v('"카메라" 배치'),t("br"),e._v("\n→ Viewing transformation")])])]),e._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[e._v('"렌즈" 선택')]),e._v("\n→ "),t("strong",[e._v("Projection transformation")])])])]),e._v(" "),t("li",[t("ol",{attrs:{start:"4"}},[t("li",[e._v('"스크린"에 출력'),t("br"),e._v("\n→ Viewport transformation")])])])]),e._v(" "),t("h2",{attrs:{id:"recall-opengl-clip-space"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recall-opengl-clip-space"}},[e._v("#")]),e._v(" Recall: OpenGL Clip Space")]),e._v(" "),t("ul",[t("li",[e._v("Clip Space에서는 x, y, z 좌표가 -1에서 1까지인 cube 공간 안에 객체를 그릴 수 있음")]),e._v(" "),t("li",[e._v("이 공간의 xy 평면이 2D "),t("strong",[e._v("viewport")]),e._v(" 역할을 함")]),e._v(" "),t("li",[e._v("이 좌표계는 "),t("strong",[e._v("normalized device coordinate (NDC)")]),e._v(" 라고 불림")])]),e._v(" "),t("h2",{attrs:{id:"normalized-device-coordinates-ndc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#normalized-device-coordinates-ndc"}},[e._v("#")]),e._v(" Normalized Device Coordinates (NDC)")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("**Normalized device coordinates (NDC)**는 장치 독립적인 디스플레이 좌표계이다")]),e._v(" "),t("ul",[t("li",[e._v("픽셀 크기, 해상도 등이 다른 다양한 디스플레이 장치에서도 프로그램이 동일하게 동작하게 하려면"),t("br"),e._v(" "),t("strong",[e._v("정규화된 좌표계")]),e._v("가 필요하다")])])]),e._v(" "),t("li",[t("p",[e._v("이 좌표계에서의 공간을 "),t("strong",[e._v("clip space")]),e._v(" 또는 "),t("strong",[e._v("NDC space")]),e._v("라고도 부른다")]),e._v(" "),t("ul",[t("li",[e._v("단, clip space와 NDC space는 약간의 차이가 있으므로"),t("br"),e._v("\n이는 이번 강의에서 자세히 다룸")])])])]),e._v(" "),t("h2",{attrs:{id:"canonical-view-volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#canonical-view-volume"}},[e._v("#")]),e._v(" Canonical View Volume")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Canonical view volume")]),e._v("은 NDC 공간 내의 3차원 볼륨이며, 화면에 표시될 수 있는 장면의 영역을 정의한다.")]),e._v(" "),t("li",[e._v("OpenGL 기준: "),t("code",[e._v("[-1, 1]^3")]),e._v(" 범위")]),e._v(" "),t("li",[e._v("Direct3D 기준: "),t("code",[e._v("[0, 1]")]),e._v(" 범위 (z축만 다름)")]),e._v(" "),t("li",[e._v("canonical view volume 안에 있는 객체만 렌더링된다.\n"),t("ul",[t("li",[e._v("카메라 뷰 안에 있는 객체만 그려짐")]),e._v(" "),t("li",[e._v("너무 멀거나 너무 가까운 객체는 제외됨")])])])]),e._v(" "),t("h2",{attrs:{id:"canonical-view-volume-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#canonical-view-volume-2"}},[e._v("#")]),e._v(" Canonical View Volume")]),e._v(" "),t("ul",[t("li",[e._v("관례적으로 NDC는 "),t("strong",[e._v("left-handed")]),e._v(" 좌표계임 (OpenGL과 Direct3D 모두)\n"),t("ul",[t("li",[e._v("NDC에서 "),t("strong",[e._v("+z 방향")]),e._v("이 화면 방향")])])]),e._v(" "),t("li",[e._v("OpenGL의 projection 함수는 자동으로 좌표계 손잡이(handedness)를 바꿔줌 → "),t("strong",[e._v("world/model space는 right-handed")]),e._v(" "),t("ul",[t("li",[e._v("View direction in view space: -z 방향")]),e._v(" "),t("li",[e._v("Direct3D는 기본적으로 left-handed system을 사용하나, 이 변경을 하지 않음")])])])]),e._v(" "),t("h2",{attrs:{id:"view-volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#view-volume"}},[e._v("#")]),e._v(" View Volume")]),e._v(" "),t("ul",[t("li",[e._v("View space에서는 객체를 꼭 "),t("code",[e._v("[-1, 1]")]),e._v(" 범위 안에 배치할 필요는 없다.")]),e._v(" "),t("li",[e._v("대신, 원하는 크기의 직육면체(cuboid)나 frustum 형태의 volume을 설정하고 그 안에 객체를 배치할 수 있다.")]),e._v(" "),t("li",[e._v("이 view volume (및 그 안의 모든 객체)은 "),t("strong",[e._v("canonical view volume in NDC space")]),e._v("로 투영된다.")])]),e._v(" "),t("p",[e._v("→ "),t("strong",[e._v("Projection transformation")])]),e._v(" "),t("h2",{attrs:{id:"projection-transformation-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#projection-transformation-3"}},[e._v("#")]),e._v(" Projection Transformation")]),e._v(" "),t("ul",[t("li",[e._v("CG에서의 Projection이란: "),t("strong",[e._v("3D 좌표를 2D 화면 좌표로 매핑")]),e._v("하는 것")]),e._v(" "),t("li",[e._v("수행 순서:\n"),t("ul",[t("li",[e._v("3D 공간상의 arbitrary view volume → canonical view volume으로 매핑"),t("br"),e._v("\n→ "),t("strong",[e._v("Projection transformation")])]),e._v(" "),t("li",[e._v("canonical view volume의 z=1 평면에 투영 (실제로 그렇게 되진 않지만, 개념적으로는 깊이(depth)를 따로 유지)")])])]),e._v(" "),t("li",[e._v("투영 변환 방식은 크게 2가지:\n"),t("ul",[t("li",[e._v("Orthographic projection")]),e._v(" "),t("li",[e._v("Perspective projection")])])])]),e._v(" "),t("h2",{attrs:{id:"orthographic-orthogonal-projection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#orthographic-orthogonal-projection"}},[e._v("#")]),e._v(" Orthographic (Orthogonal) Projection")]),e._v(" "),t("ul",[t("li",[e._v("View volume: 직육면체 (cuboid)")]),e._v(" "),t("li",[e._v("Orthographic projection: 직육면체 view volume을 canonical view volume로 매핑\n"),t("ul",[t("li",[e._v("Scaling + Translation 조합")]),e._v(" "),t("li",[e._v("→ "),t("strong",[e._v("Windowing transformation")])])])])]),e._v(" "),t("h2",{attrs:{id:"windowing-transformation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windowing-transformation"}},[e._v("#")]),e._v(" Windowing Transformation")]),e._v(" "),t("ul",[t("li",[e._v("사각형 공간 내 점 "),t("code",[e._v("(p_x, p_y)")]),e._v("을 다른 사각형 공간의 대응 점 "),t("code",[e._v("(p_x', p_y')")]),e._v("로 매핑하는 변환\n"),t("ul",[t("li",[e._v("예: "),t("code",[e._v("(x_l, y_l)")]),e._v(" ~ "),t("code",[e._v("(x_r, y_r)")]),e._v(" → "),t("code",[e._v("(x_l', y_l')")]),e._v(" ~ "),t("code",[e._v("(x_r', y_r')")])])])])]),e._v(" "),t("p",[e._v("수식:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("p'_x = ((p_x - x_l) / (x_r - x_l)) * (x_r' - x_l') + x_l'\np'_y = ((p_y - y_l) / (y_r - y_l)) * (y_r' - y_l') + y_l'\n")])])]),t("h2",{attrs:{id:"orthographic-projection-matrix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#orthographic-projection-matrix"}},[e._v("#")]),e._v(" Orthographic Projection Matrix")]),e._v(" "),t("ul",[t("li",[e._v("3D까지 확장하고, 다음과 같이 대입:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("x_r = right, x_l = left\ny_t = top, y_b = bottom\nz_f = far, z_n = near\n\nP_orth = \n| 2/(x_r - x_l)   0               0              -(x_r + x_l)/(x_r - x_l) |\n| 0              2/(y_t - y_b)   0              -(y_t + y_b)/(y_t - y_b) |\n| 0              0              -2/(z_f - z_n)  -(z_f + z_n)/(z_f - z_n) |\n| 0              0               0               1                       |\n")])])]),t("h2",{attrs:{id:"examples-of-orthographic-projection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples-of-orthographic-projection"}},[e._v("#")]),e._v(" Examples of Orthographic Projection")]),e._v(" "),t("ul",[t("li",[e._v("Orthographic 및 등각(isometric) 투영 예시")]),e._v(" "),t("li",[t("strong",[e._v("객체는 카메라로부터의 거리와 무관하게 항상 동일한 크기로 보임")])])]),e._v(" "),t("h2",{attrs:{id:"properties-of-orthographic-projection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties-of-orthographic-projection"}},[e._v("#")]),e._v(" Properties of Orthographic Projection")]),e._v(" "),t("ul",[t("li",[e._v("사실적으로 보이지 않음")]),e._v(" "),t("li",[t("strong",[e._v("정확한 측정")]),e._v("에 적합")]),e._v(" "),t("li",[e._v("CAD, 건축 도면 등에서 가장 일반적으로 사용됨\n"),t("ul",[t("li",[e._v("정확한 측정이 중요한 환경")])])]),e._v(" "),t("li",[e._v("Scaling과 Translation의 조합"),t("br"),e._v("\n→ "),t("strong",[e._v("Affine transformation")])])]),e._v(" "),t("h2",{attrs:{id:"demo-orthographic-projection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-orthographic-projection"}},[e._v("#")]),e._v(" [Demo] Orthographic Projection")]),e._v(" "),t("ul",[t("li",[e._v("슬라이더를 움직이며 왼쪽(view volume)과 오른쪽(rendered view)을 관찰")]),e._v(" "),t("li",[e._v("왼쪽, 오른쪽, 아래, 위, 가까움, 멀리 위치를 조절 가능")])]),e._v(" "),t("h2",{attrs:{id:"quiz-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quiz-1"}},[e._v("#")]),e._v(" Quiz 1")]),e._v(" "),t("h2",{attrs:{id:"perspective-effects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perspective-effects"}},[e._v("#")]),e._v(" Perspective Effects")]),e._v(" "),t("ul",[t("li",[e._v("멀리 있는 객체는 작게 보임")])]),e._v(" "),t("p",[t("strong",[e._v("Vanishing point")]),e._v(":")]),e._v(" "),t("ul",[t("li",[e._v("투시 그림법에서 "),t("strong",[e._v("평행선이 수렴해 보이는 점")])]),e._v(" "),t("li",[e._v("평면 투시에서 원근감을 부여하는 핵심 요소")])]),e._v(" "),t("h2",{attrs:{id:"perspective-projection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perspective-projection"}},[e._v("#")]),e._v(" Perspective Projection")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("View volume: "),t("strong",[e._v("Frustum (절두체)")]),e._v('\n→ "Viewing frustum"')])]),e._v(" "),t("li",[t("p",[e._v("Perspective projection: Viewing frustum을 canonical view volume로 매핑")])]),e._v(" "),t("li",[t("p",[e._v("정점들을 canonical view volume로 비선형적으로 매핑\n→ 깊이에 따른 왜곡 효과 생성")])])]),e._v(" "),t("h2",{attrs:{id:"why-does-this-mapping-generate-a-perspective-effect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#why-does-this-mapping-generate-a-perspective-effect"}},[e._v("#")]),e._v(" Why does this mapping generate a perspective effect?")]),e._v(" "),t("ul",[t("li",[e._v("원래 3D 장면에서 카메라 기준으로 멀어질수록 z값 증가")]),e._v(" "),t("li",[e._v("canonical 공간으로 투영할 때 z에 따라 비선형적으로 축소됨")]),e._v(" "),t("li",[t("strong",[e._v("가까운 객체는 크게, 먼 객체는 작게")]),e._v(" 투영됨"),t("br"),e._v("\n→ 이것이 perspective 효과의 본질")])]),e._v(" "),t("h2",{attrs:{id:"an-example-of-perspective-projection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#an-example-of-perspective-projection"}},[e._v("#")]),e._v(" An Example of Perspective Projection")]),e._v(" "),t("p",[t("strong",[e._v("After perspective projection")])]),e._v(" "),t("ul",[t("li",[e._v("Frustum 내에 있는 객체들이 canonical 공간에 비선형적으로 압축됨")]),e._v(" "),t("li",[e._v("카메라에 가까운 객체는 더 크게, 멀리 있는 객체는 더 작게 보임")])]),e._v(" "),t("h2",{attrs:{id:"an-example-of-perspective-projection-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#an-example-of-perspective-projection-2"}},[e._v("#")]),e._v(" An Example of Perspective Projection")]),e._v(" "),t("ul",[t("li",[e._v("Canonical 공간의 결과를 2D 화면에 표시")]),e._v(" "),t("li",[e._v("수평 방향: 1024px")]),e._v(" "),t("li",[e._v("수직 방향: 768px")]),e._v(" "),t("li",[e._v("카메라의 viewport 내에 객체들이 깊이에 따라 달리 표현됨")])]),e._v(" "),t("h2",{attrs:{id:"let-s-first-consider-3d-view-frustum-→-2d-projection-plane"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#let-s-first-consider-3d-view-frustum-→-2d-projection-plane"}},[e._v("#")]),e._v(" Let's first consider 3D View Frustum → 2D Projection Plane")]),e._v(" "),t("ul",[t("li",[e._v("3D 점을 카메라 평면에 투영하는 과정을 고려해보자")])]),e._v(" "),t("h2",{attrs:{id:"perspective-projection-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perspective-projection-2"}},[e._v("#")]),e._v(" Perspective projection")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("화면 위의 객체 크기는 "),t("strong",[e._v("카메라로부터의 거리")]),e._v("에 반비례함")])]),e._v(" "),t("li",[t("p",[e._v("유사한 삼각형의 성질:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("y' / d = y / -z\n⇒ y' = -d·y / z\n")])])])])]),e._v(" "),t("h2",{attrs:{id:"homogeneous-coordinates-revisited"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homogeneous-coordinates-revisited"}},[e._v("#")]),e._v(" Homogeneous coordinates revisited")]),e._v(" "),t("ul",[t("li",[e._v("Perspective는 나눗셈 연산이 필요함\n"),t("ul",[t("li",[e._v("이는 "),t("strong",[e._v("Affine transformation에는 포함되지 않음")])])])]),e._v(" "),t("li",[e._v("Affine에서는 평행선이 평행하게 유지됨\n"),t("ul",[t("li",[e._v("따라서 소실점 없음")]),e._v(" "),t("li",[e._v("뷰포인트로 수렴하는 광선도 없음")])])]),e._v(" "),t("li",[t("strong",[e._v("Homogeneous coordinates의 본래 목적은 투영 구현")]),e._v("에 있음")])]),e._v(" "),t("h2",{attrs:{id:"homogeneous-coordinates-revisited-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homogeneous-coordinates-revisited-2"}},[e._v("#")]),e._v(" Homogeneous coordinates revisited")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("w = 1")]),e._v(" 좌표를 자리 표시자로 도입\n"),t("ul",[t("li",[e._v("translation을 선형 변환과 통합하는 데 편리")])])]),e._v(" "),t("li",[e._v("임의의 w도 허용 가능:"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[x  ]      [kx  ]\n[y  ]  ~   [ky  ]\n[z  ]      [kz  ]\n[w  ]      [kw  ]\n")])])]),t("ul",[t("li",[e._v("4D 벡터의 "),t("strong",[e._v("스칼라 배수는 동일한 좌표로 간주")])])])])]),e._v(" "),t("h2",{attrs:{id:"perspective-projection-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perspective-projection-3"}},[e._v("#")]),e._v(" Perspective projection")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("투영 평면에 투영하려면, z를 w로 옮겨서 다음과 같이 변환:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[x']   = [-d·x/z]     [dz  0   0   0 ]   [x]\n[y']     [-d·y/z]  =  [0  dz   0   0 ] * [y]\n[ 1 ]     [   1 ]     [0   0   0  -1 ]   [z]\n                       [0   0   1   0 ]   [1]\n")])])])])]),e._v(" "),t("h2",{attrs:{id:"so-far-3d-→-2d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#so-far-3d-→-2d"}},[e._v("#")]),e._v(" So far, 3D → 2D")]),e._v(" "),t("ul",[t("li",[e._v("지금까지는 단지"),t("br"),e._v(" "),t("strong",[e._v("3D View Frustum → 2D Projection Plane")]),t("br"),e._v("\n로의 투영 이야기였음")])]),e._v(" "),t("h2",{attrs:{id:"now-3d-→-3d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#now-3d-→-3d"}},[e._v("#")]),e._v(" Now, 3D → 3D")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("그러나 실제로 우리가 구현해야 하는 것은"),t("br"),e._v(" "),t("strong",[e._v("3D View Frustum → 3D Canonical View Volume")])])]),e._v(" "),t("li",[t("p",[e._v("즉, 원근 투영 이후에도 (x', y', z') 좌표는 유지되어야 함"),t("br"),e._v("\n→ clip space의 깊이 정보가 필요")])])]),e._v(" "),t("h2",{attrs:{id:"first-3d-view-frustum-→-3d-cuboid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#first-3d-view-frustum-→-3d-cuboid"}},[e._v("#")]),e._v(" First, 3D View Frustum → 3D Cuboid")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("우선은 canonical volume이 아닌, near/far 평면이 같은 위치의 cuboid를 고려")])]),e._v(" "),t("li",[t("p",[e._v("x, y 좌표에 대해 이전 슬라이드와 같은 방식으로 투영 가능:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("y' = -d·y / z\nx' = -d·x / z\n")])])])]),e._v(" "),t("li",[t("p",[e._v("near/far offset이 동일한 cuboid를 고려")])]),e._v(" "),t("li",[t("p",[e._v("문제는 z 좌표:")]),e._v(" "),t("ul",[t("li",[e._v("깊이 z는 보존되지 않음 (z가 나눗셈 연산 포함 → 비선형)")]),e._v(" "),t("li",[e._v("해결: z 값을 적절히 매핑하여 near/far 평면의 깊이 정보를 유지")])])])]),e._v(" "),t("h2",{attrs:{id:"_3d-view-frustum-→-3d-cuboid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3d-view-frustum-→-3d-cuboid"}},[e._v("#")]),e._v(" 3D View Frustum → 3D Cuboid")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("z 값까지 포함하여 전체를 행렬로 표현:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[x']   = [-dx/z]       [dz  0   0   0 ]   [x]\n[y']     [-dy/z]   =   [0  dz   0   0 ] * [y]\n[z']     [-X/z ]       [0   0   a   b ]   [z]\n[ 1 ]     [  1 ]       [0   0  -1   0 ]   [1]\n")])])])]),e._v(" "),t("li",[t("p",[e._v("x, y에는 영향 없음 → z'는 x, y와 무관")]),e._v(" "),t("ul",[t("li",[e._v("따라서 c₀ = c₁ = 0")])])]),e._v(" "),t("li",[t("p",[e._v("원하는 조건:")]),e._v(" "),t("ul",[t("li",[e._v("z'(-n) = n")]),e._v(" "),t("li",[e._v("z'(-f) = f")])])]),e._v(" "),t("li",[t("p",[e._v("선형식으로 z' 정의: "),t("code",[e._v("z'(z) = (a·z + b) / -z")])])]),e._v(" "),t("li",[t("p",[e._v("두 개의 미지수 a, b를 두 조건에 대입해 해 구함")]),e._v(" "),t("ul",[t("li",[e._v("해: "),t("code",[e._v("a = fn")]),e._v(", "),t("code",[e._v("b = f + n")])])])])]),e._v(" "),t("h2",{attrs:{id:"final-3d-view-frustum-→-3d-canonical-view-volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final-3d-view-frustum-→-3d-canonical-view-volume"}},[e._v("#")]),e._v(" Final: 3D View Frustum → 3D Canonical View Volume")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("P_pers = P_orth · P_dc")])]),e._v(" "),t("li",[e._v("P_dc 행렬 (near, far 반영):"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[n   0   0   0]\n[0   n   0   0]\n[0   0  f+n fn]\n[0   0  -1   0]\n")])])])]),e._v(" "),t("li",[e._v("frustum → cuboid → canonical volume 으로 변환")])]),e._v(" "),t("h2",{attrs:{id:"perspective-projection-matrix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perspective-projection-matrix"}},[e._v("#")]),e._v(" Perspective Projection Matrix")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("최종 perspective projection 행렬:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("P_pers = P_orth · P_dc =\n\n[n/r  0     0         0   ]\n[0    n/t   0         0   ]\n[0    0   (f+n)/(n-f) fnf/(n-f)]\n[0    0    -1         0   ]\n")])])])])]),e._v(" "),t("h2",{attrs:{id:"note-on-mapped-depth-z-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#note-on-mapped-depth-z-value"}},[e._v("#")]),e._v(" Note on Mapped Depth (Z' value)")]),e._v(" "),t("ul",[t("li",[e._v("Perspective projection은 깊이 z 값을 (-1, +1) 범위로 "),t("strong",[e._v("비선형 매핑")])]),e._v(" "),t("li",[e._v("결과:\n"),t("ul",[t("li",[e._v("카메라 가까이의 z 값일수록 정밀도가 높음")]),e._v(" "),t("li",[e._v("멀수록 정밀도가 낮아짐")])])]),e._v(" "),t("li",[e._v("그래프:\n"),t("ul",[t("li",[e._v("X축: z 값 (원래 깊이)")]),e._v(" "),t("li",[e._v("Y축: 매핑된 z' 값")])])])]),e._v(" "),t("h2",{attrs:{id:"perspective-division-clip-ndc-space"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#perspective-division-clip-ndc-space"}},[e._v("#")]),e._v(" Perspective Division, Clip / NDC Space")]),e._v(" "),t("ul",[t("li",[e._v("clip space: shader 이후 장면 표현 (4D homogeneous)")]),e._v(" "),t("li",[e._v("NDC space: perspective division 이후의 3D 좌표계\n"),t("ul",[t("li",[e._v("w로 나눠서 [x/w, y/w, z/w] 형태로 변환됨")])])]),e._v(" "),t("li",[e._v("실제 표현되는 범위: [-1, 1]")])]),e._v(" "),t("h2",{attrs:{id:"demo-perspective-projection-frustum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-perspective-projection-frustum"}},[e._v("#")]),e._v(" [Demo] Perspective Projection - frustum")]),e._v(" "),t("ul",[t("li",[e._v("웹 데모: https://learnwebgl.brown37.net/08_projections/create_frustum/create_frustum.html")]),e._v(" "),t("li",[e._v("슬라이더로 left, right, top, near, far 값을 조절하며 변화 확인")])]),e._v(" "),t("h2",{attrs:{id:"demo-perspective-projection-perspective"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-perspective-projection-perspective"}},[e._v("#")]),e._v(" [Demo] Perspective Projection - perspective")]),e._v(" "),t("ul",[t("li",[e._v("웹 데모: https://learnwebgl.brown37.net/08_projections/create_perspective/create_perspective.html")]),e._v(" "),t("li",[e._v("슬라이더를 이용해 "),t("code",[e._v("fovy")]),e._v(", "),t("code",[e._v("aspect")]),e._v(", "),t("code",[e._v("near")]),e._v(", "),t("code",[e._v("far")]),e._v(" 조절")]),e._v(" "),t("li",[t("strong",[e._v("frustum")]),e._v("과 "),t("strong",[e._v("perspective")]),e._v(" 중 어떤 것이 더 편리한가?")])]),e._v(" "),t("h2",{attrs:{id:"quiz-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quiz-2"}},[e._v("#")]),e._v(" Quiz 2")]),e._v(" "),t("h1",{attrs:{id:"viewport-transformation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewport-transformation"}},[e._v("#")]),e._v(" Viewport Transformation")]),e._v(" "),t("h2",{attrs:{id:"viewport-transformation-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewport-transformation-2"}},[e._v("#")]),e._v(" Viewport Transformation")]),e._v(" "),t("ul",[t("li",[e._v("Viewport transformation은 NDC 공간에서 화면 공간(screen space)으로 변환")]),e._v(" "),t("li",[e._v("마지막 단계의 변환: clip space → screen space")]),e._v(" "),t("li",[e._v("좌표계 범위:\n"),t("ul",[t("li",[e._v("NDC: (-1, -1, -1) ~ (1, 1, 1)")]),e._v(" "),t("li",[e._v("Screen: (0, 0, 0) ~ (width, height, 1)")])])])]),e._v(" "),t("h2",{attrs:{id:"recall-that-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recall-that-2"}},[e._v("#")]),e._v(" Recall that...")]),e._v(" "),t("ul",[t("li",[t("ol",[t("li",[e._v("객체 배치\n→ Modeling transformation")])])]),e._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[e._v("카메라 배치\n→ Viewing transformation")])])]),e._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[e._v("렌즈 설정\n→ Projection transformation")])])]),e._v(" "),t("li",[t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[e._v('"스크린에 출력"')]),e._v("\n→ "),t("strong",[e._v("Viewport transformation")])])])])]),e._v(" "),t("h2",{attrs:{id:"viewport-transformation-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewport-transformation-3"}},[e._v("#")]),e._v(" Viewport Transformation")]),e._v(" "),t("ul",[t("li",[e._v("Canonical view volume (NDC)에서 z방향 +를 기준으로 내려다본다고 가정")]),e._v(" "),t("li",[e._v("Viewport는 screen 상의 사각형 영역")]),e._v(" "),t("li",[e._v("Viewport transformation도 결국 "),t("strong",[e._v("windowing transformation")]),e._v("의 일종")]),e._v(" "),t("li",[e._v("깊이 값(z)은 [0, 1] 범위로 재매핑됨 (default depth buffer)")])]),e._v(" "),t("h2",{attrs:{id:"viewport-transformation-matrix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewport-transformation-matrix"}},[e._v("#")]),e._v(" Viewport Transformation Matrix")]),e._v(" "),t("ul",[t("li",[e._v("windowing transformation matrix에서,\n"),t("ul",[t("li",[t("code",[e._v("x_p, x_l, x_h ...")]),e._v(" 대신 viewport 변수 대입")])])]),e._v(" "),t("li",[e._v("변환 행렬:"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("T_vp =\n[ width/2     0          0    width/2 + x_min ]\n[   0       height/2     0    height/2 + y_min]\n[   0          0       1/2         1/2       ]\n[   0          0         0           1       ]\n")])])])]),e._v(" "),t("li",[t("code",[e._v("(x_min, y_min)")]),e._v("부터 시작하여 "),t("code",[e._v("(width, height)")]),e._v(" 크기 화면 좌표로 이동")])]),e._v(" "),t("home")],1)}),[],!1,null,null,null);t.default=i.exports}}]);